{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Yamause \u306e Python \u304a\u8a66\u3057\u90e8\u5c4b","text":"<p>Python \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3068 mkdocs \u3092\u5229\u7528\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4f5c\u6210\u306e\u500b\u4eba\u7684\u306a\u7df4\u7fd2\u30ce\u30fc\u30c8\u3060\u3088</p>"},{"location":"#_1","title":"\u306f\u3058\u3081\u306b","text":"<ul> <li> <p> Blog\u3092\u59cb\u3081\u308b</p> <p>Blog \u306f\u81ea\u7531\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u30ce\u30a6\u30cf\u30a6\u3092\u5171\u6709\u3057\u307e\u3059\u3002</p> <p> Getting started</p> </li> <li> <p> Python\u30b3\u30fc\u30c9\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u304b\u304f</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u304b\u304f</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul>"},{"location":"#_2","title":"\u30e1\u30e2","text":""},{"location":"#-","title":"\u30cf\u30f3\u30c9\u30d6\u30c3\u30af - \u904b\u7528\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3068\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3069\u3063\u3061\u306b\u66f8\u304f\uff1f\u66f8\u304d\u5206\u3051\u306b\u3064\u3044\u3066","text":"<p>\u904b\u7528\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3 \u306f\u76ee\u7684\u306b\u5bfe\u3057\u3066\u3001\u3069\u306e\u3088\u3046\u306b\u305d\u306e\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u306e\u304b\u9053\u7b4b\u3092\u793a\u3057\u307e\u3059\u3002\u6280\u8853\u7684\u306a\u8a73\u7d30\u306f\u8a18\u8f09\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070Python\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3067\u306f <code>pyproject.toml</code> \u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u4e00\u5207\u89e6\u308c\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3059\u308b\u3046\u3048\u3067\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u3068\u306a\u305c\u305d\u306e\u624b\u9806\u3092\u5b9f\u884c\u3059\u3079\u304d\u304b\u306e\u307f\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p> <p>\u203b\u624b\u9806\u5185\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3059\u308b\u5834\u5408\u306a\u3069\u306f\u66f4\u65b0\u500b\u6240\u306b\u3064\u3044\u3066\u8aac\u660e\u3092\u3059\u3079\u304d\u3067\u3059\u3002</p> <p>\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306f\u63a8\u5968\u3055\u308c\u308b\u69cb\u6210\u306b\u3064\u3044\u3066\u8a18\u8f09\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070Python\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3067\u306f <code>pyproject.toml</code> \u306e\u8a2d\u5b9a\u5185\u5bb9\u306b\u3064\u3044\u3066\u3001\u306a\u305c\u305d\u306e\u8a2d\u5b9a\u5024\u304c\u63a8\u5968\u3055\u308c\u308b\u306e\u304b\u6280\u8853\u7684\u306a\u89b3\u70b9\u304b\u3089\u8aac\u660e\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002</p>"},{"location":"#_3","title":"\u5fd8\u308c\u3061\u3083\u3044\u3051\u306a\u3044\u3053\u3068","text":"<p>\u4eba\u306f\u898b\u51fa\u3057\u306b\u66f8\u3044\u3066\u3042\u308b\u4ee5\u4e0a\u306e\u60c5\u5831\u3092\u6c42\u3081\u3066\u3044\u306a\u3044\u3002\u76ee\u7684\u306e\u60c5\u5831\u3092\u7c21\u6f54\u306b\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u91cd\u8996\u3059\u308b\u3002\u8a71\u304c\u5e83\u304c\u308a\u305d\u3046\u306a\u3068\u304d\u306f\u5225\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u30ea\u30f3\u30af\u3059\u308b\u3002</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/09/13/hello-world/","title":"Hello world!","text":"<p>Hay</p>","tags":["blog"]},{"location":"handbooks/coding_style/ansible/","title":"Ansible\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04","text":"<p>fuga</p>"},{"location":"handbooks/coding_style/python/","title":"Python\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04","text":"<p>Hogehoge</p>"},{"location":"handbooks/operation_guideline/mkdocs/blog/","title":"Blog\u306e\u59cb\u3081\u65b9","text":""},{"location":"handbooks/operation_guideline/mkdocs/blog/#_1","title":"\u65b0\u898f\u8a18\u4e8b\u306e\u6295\u7a3f","text":"<p><code>mkdocs.yml</code> \u3092\u7de8\u96c6\u3057\u3001 <code>nav</code> \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u65b0\u3057\u3044\u6295\u7a3f\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> mkdocs.yml<pre><code>nav:\n  - Blog:\n      - blog/index.md\n      - blog/posts/new-post.yml  # \u65b0\u898f\u8a18\u4e8b\n</code></pre> <p><code>docs/blog/posts/</code> \u914d\u4e0b\u306b\u8a18\u4e8b\u3092\u66f8\u304f\u305f\u3081\u306eYAML\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b\u8a18\u4e8b\u306e\u30e1\u30bf\u60c5\u5831\u3092\u8a18\u8ff0\u3057\u3001\u305d\u306e\u4e0b\u306b\u672c\u6587\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> docs/blog/posts/new-post.yml<pre><code>---\ndraft: false # (1)\ndate: # (2)\n  created: 2023-12-31\n  updated: 2024-01-02\nauthors: # (3)\n  - yamause\ncategories: # (4)\n  - tech\nlinks: # (5)\n  - reference/yamause.md\ntags: # (6)\n  - blog\n---\n\n# Hello world!\n\n\u4ee5\u4e0b\u3001\u672c\u6587\n</code></pre> <ol> <li>draft: <code>true</code> \u306e\u5834\u5408\u306f\u30d6\u30e9\u30a6\u30b6\u306b\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002</li> <li>date: \u8a18\u4e8b\u306e\u6295\u7a3f\u65e5\u3068\u66f4\u65b0\u65e5</li> <li>authors: \u8a18\u4e8b\u306e\u8457\u8005</li> <li> <p>categories: \u8a18\u4e8b\u3092\u30ab\u30c6\u30b4\u30ea\u30fc\u3054\u3068\u306b\u5206\u985e\u3067\u304d\u307e\u3059\u3002\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u5229\u7528\u53ef\u80fd\u306a\u30ab\u30c6\u30b4\u30ea\u30fc\u306f <code>mkdocs.yml</code> \u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> <p>mkdocs.yml<pre><code>plugins:\n  - blog:\n      categories_allowed:\n        - tech\n        - news\n        - poem\n    # \u3053\u308c\u306f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n    # \u6700\u65b0\u306e\u8a2d\u5b9a\u306f\u76f4\u63a5\u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n</code></pre> 5. links: \u8a18\u4e8b\u306e\u95a2\u9023\u30ea\u30f3\u30af</p> </li> </ol>"},{"location":"handbooks/operation_guideline/mkdocs/blog/#_2","title":"\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306e\u4f5c\u6210","text":"<p><code>.authors.yml</code> \u306b authors \u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> docs/blog/.authors.yml<pre><code>authors:\n  yamause:\n    name: Yamause\n    description: Creator\n    avatar: https://github.com/yamause.png\n</code></pre>"},{"location":"handbooks/operation_guideline/mkdocs/code_anon/","title":"\u30b3\u30fc\u30c9\u306b\u6ce8\u91c8\u3092\u8ffd\u52a0\u3059\u308b","text":"<p><code>mkdocs.yml</code> \u306b\u3064\u304e\u306e\u5024\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002</p> <pre><code>  features:\n    - content.code.annotate\n</code></pre> <p>\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066 Markdown \u306f\u3064\u304e\u306e\u3088\u3046\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002</p> ViewCode <pre><code>import yamause\n\nyamause.say()  # (1)!\n</code></pre> <ol> <li>\u3053\u3053\u306b\u6ce8\u91c8\u3092\u8868\u793a\u3057\u307e\u3059</li> </ol> <pre><code>```python\nimport yamause\n\nyamause.say()  # (1)!\n```\n\n1. \u3053\u3053\u306b\u6ce8\u91c8\u3092\u8868\u793a\u3057\u307e\u3059\n</code></pre> <p>\u53c2\u8003\uff1a Material for MkDocs. \"Code bloks. Code annotations\", (2025-03-02).</p>"},{"location":"handbooks/operation_guideline/mkdocs/mermaid/","title":"Mermaid \u3092\u8868\u793a\u3059\u308b","text":"<p><code>mkdocs.yml</code> \u306b\u3064\u304e\u306e\u5024\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <p>\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066 Markdown \u306f\u3064\u304e\u306e\u3088\u3046\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002</p> ViewCode <pre><code>flowchart LR\n    Start --&gt; Stop</code></pre> <pre><code>```mermaid\nflowchart LR\n    Start --&gt; Stop\n```\n</code></pre> <p>Mermaid \u306e\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002https://mermaid.js.org/intro/</p> <p>\u53c2\u8003\uff1a Material for MkDocs. \"Diagrams\", (2025-03-02).</p>"},{"location":"systems/yamause/","title":"yamause","text":"<p>Example of a package with a single module.</p> <p>MkDocs\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3002</p>","tags":["python"]},{"location":"systems/yamause/#src.yamause.example.Yamause","title":"<code>Yamause</code>","text":"<p>MkDocs\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u30af\u30e9\u30b9\u3002</p> <p>\u3053\u306e\u30af\u30e9\u30b9\u306b\u306f\u3001\u6570\u5024\u306b1\u3092\u52a0\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002</p> Source code in <code>src/yamause/example.py</code> <pre><code>class Yamause:\n    \"\"\"MkDocs\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u30af\u30e9\u30b9\u3002\n\n    \u3053\u306e\u30af\u30e9\u30b9\u306b\u306f\u3001\u6570\u5024\u306b1\u3092\u52a0\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\n    \"\"\"\n\n    def __init__(self):\n        pass\n\n    def add_one(self, num: int) -&gt; int:\n        \"\"\"\u6307\u5b9a\u3055\u308c\u305f\u6570\u5024\u306b1\u3092\u52a0\u3048\u307e\u3059\u3002\n\n        Examples:\n            &gt;&gt;&gt; yamause = Yamause()\n            &gt;&gt;&gt; yamause.add_one(1)\n            2\n\n        Args:\n            num (int): \u52a0\u3048\u308b\u5bfe\u8c61\u306e\u6570\u5024\u3002\n\n        Returns:\n            int: \u6570\u5024\u306b1\u3092\u52a0\u3048\u305f\u7d50\u679c\u3002\n        \"\"\"\n        return num + 1\n\n    def say(self) -&gt; str:\n        \"\"\"'Hello, world!'\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\n\n        Returns:\n            str: 'Hello, world!'\u3068\u3044\u3046\u6587\u5b57\u5217\u3002\n        \"\"\"\n        return 'Hello, world!'\n</code></pre>","tags":["python"]},{"location":"systems/yamause/#src.yamause.example.Yamause.add_one","title":"<code>add_one(num)</code>","text":"<p>\u6307\u5b9a\u3055\u308c\u305f\u6570\u5024\u306b1\u3092\u52a0\u3048\u307e\u3059\u3002</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; yamause = Yamause()\n&gt;&gt;&gt; yamause.add_one(1)\n2\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>num</code> <code>int</code> <p>\u52a0\u3048\u308b\u5bfe\u8c61\u306e\u6570\u5024\u3002</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u6570\u5024\u306b1\u3092\u52a0\u3048\u305f\u7d50\u679c\u3002</p> Source code in <code>src/yamause/example.py</code> <pre><code>def add_one(self, num: int) -&gt; int:\n    \"\"\"\u6307\u5b9a\u3055\u308c\u305f\u6570\u5024\u306b1\u3092\u52a0\u3048\u307e\u3059\u3002\n\n    Examples:\n        &gt;&gt;&gt; yamause = Yamause()\n        &gt;&gt;&gt; yamause.add_one(1)\n        2\n\n    Args:\n        num (int): \u52a0\u3048\u308b\u5bfe\u8c61\u306e\u6570\u5024\u3002\n\n    Returns:\n        int: \u6570\u5024\u306b1\u3092\u52a0\u3048\u305f\u7d50\u679c\u3002\n    \"\"\"\n    return num + 1\n</code></pre>","tags":["python"]},{"location":"systems/yamause/#src.yamause.example.Yamause.say","title":"<code>say()</code>","text":"<p>'Hello, world!'\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>'Hello, world!'\u3068\u3044\u3046\u6587\u5b57\u5217\u3002</p> Source code in <code>src/yamause/example.py</code> <pre><code>def say(self) -&gt; str:\n    \"\"\"'Hello, world!'\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\n\n    Returns:\n        str: 'Hello, world!'\u3068\u3044\u3046\u6587\u5b57\u5217\u3002\n    \"\"\"\n    return 'Hello, world!'\n</code></pre>","tags":["python"]},{"location":"systems/yamause/#src.yamause.example.add_one","title":"<code>add_one(hogehoge)</code>","text":"<p>\u6307\u5b9a\u3055\u308c\u305f\u6570\u5024\u306b1\u3092\u52a0\u3048\u307e\u3059\u3002</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; add_one(1)\n2\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>hogehoge</code> <code>int</code> <p>\u52a0\u3048\u308b\u5bfe\u8c61\u306e\u6570\u5024\u3002</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>\u6570\u5024\u306b1\u3092\u52a0\u3048\u305f\u7d50\u679c\u3002</p> Source code in <code>src/yamause/example.py</code> <pre><code>def add_one(hogehoge: int) -&gt; int:\n    \"\"\"\u6307\u5b9a\u3055\u308c\u305f\u6570\u5024\u306b1\u3092\u52a0\u3048\u307e\u3059\u3002\n\n    Examples:\n        &gt;&gt;&gt; add_one(1)\n        2\n\n    Args:\n        hogehoge (int): \u52a0\u3048\u308b\u5bfe\u8c61\u306e\u6570\u5024\u3002\n\n    Returns:\n        int: \u6570\u5024\u306b1\u3092\u52a0\u3048\u305f\u7d50\u679c\u3002\n    \"\"\"\n    return hogehoge + 1\n</code></pre>","tags":["python"]},{"location":"systems/yamause/#src.yamause.example.say","title":"<code>say()</code>","text":"<p>'Hello, world!'\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059\u3002</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>'Hello, world!'\u3068\u3044\u3046\u6587\u5b57\u5217\u3002</p> Source code in <code>src/yamause/example.py</code> <pre><code>def say() -&gt; str:\n    \"\"\"'Hello, world!'\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\n\n    Returns:\n        str: 'Hello, world!'\u3068\u3044\u3046\u6587\u5b57\u5217\u3002\n    \"\"\"\n    return 'Hello, world!'\n</code></pre>","tags":["python"]},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/tech/","title":"tech","text":""}]}